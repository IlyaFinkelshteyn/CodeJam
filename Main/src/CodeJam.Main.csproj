<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{2F2046CC-FB47-4318-B335-5A82B04B6C40}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>CodeJam</RootNamespace>
    <AssemblyName>CodeJam</AssemblyName>
    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>TRACE;DEBUG;FW461;FW46;FW452</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <DocumentationFile>bin\Debug\CodeJam.XML</DocumentationFile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE;FW461;FW46;FW452</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <DocumentationFile>bin\Release\CodeJam.XML</DocumentationFile>
  </PropertyGroup>
  <PropertyGroup>
    <SignAssembly>true</SignAssembly>
  </PropertyGroup>
  <PropertyGroup>
    <AssemblyOriginatorKeyFile>..\..\CodeJam.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml" />
    <Reference Include="System.Xml.Linq" />
  </ItemGroup>
  <Choose>
    <When Condition="$(DefineConstants.Contains('FW35'))">
      <ItemGroup>
        <Reference Include="System.Threading, Version=1.0.2856.102, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
          <HintPath>..\..\packages\TaskParallelLibrary.1.0.2856.0\lib\Net35\System.Threading.dll</HintPath>
          <Private>True</Private>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Choose>
    <When Condition="!$(DefineConstants.Contains('FW40'))">
      <ItemGroup>
        <Reference Include="System.ValueTuple, Version=4.0.1.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
          <HintPath>..\..\packages\System.ValueTuple.4.3.0\lib\netstandard1.0\System.ValueTuple.dll</HintPath>
          <Private>True</Private>
          <Aliases>global</Aliases>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <ItemGroup>
    <Compile Include="..\..\Jetbrains.Annotations.cs">
      <Link>Jetbrains.Annotations.cs</Link>
    </Compile>
    <Compile Include="Algorithms\Algorithms.EqualRange.IComparable.cs" />
    <Compile Include="Algorithms\Algorithms.EqualRange.Comparer.cs" />
    <Compile Include="Algorithms\HashCode.cs" />
    <Compile Include="Algorithms\Algorithms.EqualRange.generated.cs">
      <DependentUpon>Algorithms.EqualRange.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="Algorithms\Algorithms.Memoize.cs" />
    <Compile Include="Algorithms\Algorithms.Memoize.generated.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Algorithms.Memoize.tt</DependentUpon>
    </Compile>
    <Compile Include="Algorithms\Algorithms.UpperBound.generated.cs">
      <DependentUpon>Algorithms.UpperBound.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="Algorithms\Algorithms.LowerBound.generated.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Algorithms.LowerBound.tt</DependentUpon>
    </Compile>
    <Compile Include="Algorithms\Algorithms.LowerBound.IComparable.cs" />
    <Compile Include="Algorithms\Algorithms.PartitionPoint.cs" />
    <Compile Include="Algorithms\Algorithms.LowerBound.Comparer.cs" />
    <Compile Include="Algorithms\Algorithms.Swap.cs" />
    <Compile Include="Algorithms\Algorithms.UpperBound.IComparable.cs" />
    <Compile Include="Algorithms\Algorithms.UpperBound.Comparer.cs" />
    <Compile Include="Arithmetic\NamespaceDoc.cs" />
    <Compile Include="Arithmetic\Operators.generated.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Operators.tt</DependentUpon>
    </Compile>
    <Compile Include="Arithmetic\OperatorsFactory.cs" />
    <Compile Include="Arithmetic\Operators.cs" />
    <Compile Include="Assertions\Code.NonDebug.cs" />
    <Compile Include="Assertions\Code.cs" />
    <Compile Include="Assertions\DebugEnumCode.generated.cs">
      <DependentUpon>DebugEnumCode.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="Assertions\EnumCodeExceptions.cs" />
    <Compile Include="Assertions\CodeExceptions.cs" />
    <Compile Include="Assertions\DebugCode.cs" />
    <Compile Include="Assertions\DebugCode.generated.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>DebugCode.tt</DependentUpon>
    </Compile>
    <Compile Include="Collections\ComparerBuilder.cs" />
    <Compile Include="Collections\Dictionary\DictionaryExtensions.GetValueOrDefault.generated.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>DictionaryExtensions.GetValueOrDefault.tt</DependentUpon>
    </Compile>
    <Compile Include="Collections\Enumerable\EnumerableExtensions.AggregateOrDefault.cs" />
    <Compile Include="Collections\Enumerable\EnumerableExtensions.Grouping.cs" />
    <Compile Include="Collections\Enumerable\EnumerableExtensions.With.cs" />
    <Compile Include="Collections\Enumerable\EnumerableExtensions.GroupWhile.cs" />
    <Compile Include="Collections\Enumerable\IndexedItem.cs" />
    <Compile Include="Collections\Enumerable\EnumerableExtensions.Page.cs" />
    <Compile Include="Collections\Enumerable\EnumerableExtensions.Slice.cs" />
    <Compile Include="Collections\NamespaceDoc.cs" />
    <Compile Include="Collections\QueryableExtensions.ApplyOrder.cs" />
    <Compile Include="Collections\QueryableExtensions.cs" />
    <Compile Include="Assertions\EnumCode.cs" />
    <Compile Include="Collections\Sequence.cs" />
    <Compile Include="Collections\SuffixTree\Suffix.cs" />
    <Compile Include="Collections\SuffixTree\SuffixTree.cs" />
    <Compile Include="Collections\SuffixTree\SuffixTreeBase.cs" />
    <Compile Include="Dates\DateTimeRangeExtensions.NonGenerated.cs" />
    <Compile Include="Dates\DateTimeRangeExtensions.generated.cs">
      <DependentUpon>DateTimeRangeExtensions.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="Dates\DateTimeExtensions.NonGenerated.cs" />
    <Compile Include="Dates\DateTimeExtensions.generated.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>DateTimeExtensions.tt</DependentUpon>
    </Compile>
    <Compile Include="Dates\DateTimeRangeExtensions.cs" />
    <Compile Include="Dates\DateTimeExtensions.cs" />
    <Compile Include="Dates\NamespaceDoc.cs" />
    <Compile Include="EnumHelper.cs" />
    <Compile Include="ExceptionExtensions.cs" />
    <Compile Include="Expressions\NamespaceDoc.cs" />
    <Compile Include="Fn.generated.cs">
      <DependentUpon>Fn.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="Expressions\ExpressionExtensions.cs" />
    <Compile Include="Expressions\Expr.generated.cs">
      <DependentUpon>ExpressionHelper.Func.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Expr.tt</DependentUpon>
    </Compile>
    <Compile Include="IO\NamespaceDoc.cs" />
    <Compile Include="Lazy.cs" />
    <Compile Include="NamespaceDoc.cs" />
    <Compile Include="NullableHelper.cs" />
    <Compile Include="Objects.cs" />
    <Compile Include="Ranges\CompositeRange.cs" />
    <Compile Include="Ranges\CompositeRange.generated.cs">
      <DependentUpon>CompositeRange.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="Ranges\CompositeRangeInternal.cs" />
    <Compile Include="Ranges\NamespaceDoc.cs" />
    <Compile Include="Ranges\Range.cs" />
    <Compile Include="Ranges\Range.FactoryMethods.cs" />
    <Compile Include="Ranges\Range.FactoryMethods.generated.cs">
      <DependentUpon>Range.FactoryMethods.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="Ranges\RangeInternal.cs" />
    <Compile Include="Ranges\[Boundaries]\RangeBoundary.Operators.generated.cs">
      <DependentUpon>RangeBoundary.Operators.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="Ranges\[Boundaries]\RangeBoundaryFrom`1.cs" />
    <Compile Include="Ranges\[Boundaries]\RangeBoundaryKind.cs" />
    <Compile Include="Ranges\[Boundaries]\RangeBoundaryTo`1.generated.cs">
      <DependentUpon>RangeBoundaryTo`1.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="Ranges\[Helper types]\RangeBoundaryToDescendingComparer`1.cs" />
    <Compile Include="Ranges\[Helper types]\RangeIntersection`1.cs" />
    <Compile Include="Ranges\[Helper types]\RangeIntersection`2.generated.cs">
      <DependentUpon>RangeIntersection`2.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="Ranges\[RangeExtensions]\CompositeRangeExtensions.cs" />
    <Compile Include="Ranges\[RangeExtensions]\CompositeRangeExtensions.NoKey.cs" />
    <Compile Include="Ranges\[RangeExtensions]\CompositeRangeExtensions.WithKey.generated.cs">
      <DependentUpon>CompositeRangeExtensions.WithKey.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="Ranges\[RangeExtensions]\RangeExtensions.cs" />
    <Compile Include="Ranges\[RangeExtensions]\RangeExtensions.NoKey.cs" />
    <Compile Include="Ranges\[RangeExtensions]\RangeExtensions.WithKey.generated.cs">
      <DependentUpon>RangeExtensions.WithKey.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="Ranges\[Ranges]\CompositeRange`1.cs" />
    <Compile Include="Ranges\[Ranges]\CompositeRange`1.NonGenerated.cs" />
    <Compile Include="Ranges\[Ranges]\CompositeRange`2.generated.cs">
      <DependentUpon>CompositeRange`2.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="Ranges\[Ranges]\CompositeRange`2.NonGenerated.cs" />
    <Compile Include="Ranges\[Ranges]\ICompositeRange`1.cs" />
    <Compile Include="Ranges\[Ranges]\IRangeFactory.cs" />
    <Compile Include="Ranges\[Ranges]\IRange`1.cs" />
    <Compile Include="Ranges\[Ranges]\Range`1.cs" />
    <Compile Include="Ranges\[Ranges]\Range`1.NonGenerated.cs" />
    <Compile Include="Ranges\[Ranges]\Range`2.generated.cs">
      <DependentUpon>Range`2.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="Ranges\[Ranges]\Range`2.NonGenerated.cs" />
    <Compile Include="Reflection\MemberAccessor.cs" />
    <Compile Include="Reflection\ReflectionExtensions.MetadataAttributes.cs" />
    <Compile Include="Reflection\NamespaceDoc.cs" />
    <Compile Include="Reflection\TypeAccessor.cs" />
    <Compile Include="Reflection\TypeAccessorT.cs" />
    <Compile Include="Strings\NamespaceDoc.cs" />
    <Compile Include="Strings\CharExtensions.Infix.generated.cs">
      <DependentUpon>CharExtensions.Infix.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="Strings\StringExtensions.CharInfix.generated.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>StringExtensions.CharInfix.tt</DependentUpon>
    </Compile>
    <Compile Include="Strings\StringExtensions.ToXxx.cs" />
    <Compile Include="Strings\StringExtensions.ToXxx.generated.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>StringExtensions.ToXxx.tt</DependentUpon>
    </Compile>
    <Compile Include="Structures\OneOf\IOneOf.generated.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>IOneOf.tt</DependentUpon>
    </Compile>
    <Compile Include="Structures\OneOf\OneOf.generated.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>OneOf.tt</DependentUpon>
    </Compile>
    <Compile Include="Structures\OneOf\ValueOneOf.generated.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>ValueOneOf.tt</DependentUpon>
    </Compile>
    <Compile Include="Structures\Option\IOption.cs" />
    <Compile Include="Structures\Option\Option.cs" />
    <Compile Include="Structures\Option\ValueOption.cs" />
    <Compile Include="Reflection\InfoOf`1.cs" />
    <Compile Include="Reflection\ParamInfo.cs" />
    <Compile Include="Structures\Option\Option`1.cs" />
    <Compile Include="Targeting\FW35\Tuple.cs" />
    <Compile Include="Targeting\FW40\ValueTuple\TupleElementNamesAttribute.cs" />
    <Compile Include="Targeting\FW40\CustomAttributeExtensions.cs" />
    <Compile Include="Targeting\FW35\Action.cs" />
    <Compile Include="Targeting\FW35\EnumerableTargeting.cs" />
    <Compile Include="Targeting\FW35\EnumTargeting.cs" />
    <Compile Include="Targeting\FW35\Func.cs" />
    <Compile Include="Targeting\FW35\IStructuralComparable.cs" />
    <Compile Include="Targeting\FW35\IStructuralEquatable.cs" />
    <Compile Include="Targeting\FW35\StringTargeting.cs" />
    <Compile Include="Targeting\FW35\Volatile.cs" />
    <Compile Include="Targeting\FW40\DictionaryWithReadOnly.cs" />
    <Compile Include="Targeting\FW40\IReadOnlyList.cs" />
    <Compile Include="Targeting\FW40\ListWithReadOnly.cs" />
    <Compile Include="Targeting\FW40\ReadOnlyCollectionWithReadOnly.cs" />
    <Compile Include="Targeting\FW40\ValueTuple\TupleExtensions.cs" />
    <Compile Include="Targeting\FW40\ValueTuple\ValueTuple.cs" />
    <Compile Include="Targeting\PlatformDependent.cs" />
    <Compile Include="Collections\Array\ArrayExtensions.cs" />
    <Compile Include="Collections\Array\ArrayExtensions.generated.cs">
      <DependentUpon>ArrayExtensions.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="Collections\Enumerable\EnumerableExtensions.Flatten.cs" />
    <Compile Include="Collections\Enumerable\EnumerableExtensions.TakeLast.cs" />
    <Compile Include="Collections\Dictionary\LazyDictionary.cs" />
    <Compile Include="Collections\Dictionary\LazyDictionary`2.cs" />
    <Compile Include="Collections\Enumerable\EnumerableExtensions.Split.cs" />
    <Compile Include="Collections\Dictionary\KeyEqualityComparer.cs" />
    <Compile Include="Collections\Enumerable\EnumerableExtensions.MinMaxBy.generated.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>EnumerableExtensions.MinMaxBy.tt</DependentUpon>
    </Compile>
    <Compile Include="Collections\Dictionary\ILazyDictionary.cs" />
    <Compile Include="Targeting\FW40\IReadOnlyCollection.cs" />
    <Compile Include="Targeting\FW40\IReadOnlyDictionary.cs" />
    <Compile Include="IO\TempData.cs" />
    <Compile Include="Reflection\AssemblyExtensions.cs" />
    <Compile Include="Threading\AsyncOperationHelper.cs" />
    <Compile Include="Threading\ConcurrentLazyDictionary.cs" />
    <Compile Include="Threading\ExecSyncConcurrentLazyDictionary.cs" />
    <Compile Include="DisposableExtensions.cs" />
    <Compile Include="Collections\Enumerable\EnumerableExtensions.TopoSort.cs" />
    <Compile Include="Disposable.cs" />
    <Compile Include="Fn.cs" />
    <Compile Include="Collections\Array\Array.cs" />
    <Compile Include="Collections\Array\ArrayExtensions.Infix.cs" />
    <Compile Include="Collections\Dictionary\KeyEqualityComparer`1.cs" />
    <Compile Include="Collections\CollectionExtensions.cs" />
    <Compile Include="Collections\Dictionary\DictionaryExtensions.cs" />
    <Compile Include="Collections\Enumerable\EnumerableExtensions.cs" />
    <Compile Include="Fn`1.cs" />
    <Compile Include="Structures\Option\ValueOption`1.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Reflection\ReflectionEnumHelper.cs" />
    <Compile Include="Expressions\ExpressionExtensions.GetMembers.cs" />
    <Compile Include="Reflection\InfoOf.cs" />
    <Compile Include="Reflection\ReflectionExtensions.cs" />
    <Compile Include="Strings\CharExtensions.cs" />
    <Compile Include="Strings\NaturalOrderStringComparer.cs" />
    <Compile Include="Strings\StringExtensions.cs" />
    <Compile Include="Strings\StringExtensions.Infix.cs" />
    <Compile Include="Strings\StringOrigin.cs" />
    <Compile Include="Threading\InterlockedOperations.generated.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>InterlockedOperations.tt</DependentUpon>
    </Compile>
    <Compile Include="Threading\NamespaceDoc.cs" />
    <Compile Include="Threading\ParallelExtensions.cs" />
    <Compile Include="Threading\ParallelQueue.cs" />
    <Compile Include="Threading\ReaderWriterLockSlimExtensions.cs" />
    <Compile Include="Utilities\HGlobal.cs" />
    <Compile Include="Utilities\HGlobalScope.cs" />
    <Compile Include="Utilities\HGlobalScope`1.cs" />
    <Compile Include="Utilities\Memory.cs" />
    <Compile Include="Xml\NamespaceDoc.cs" />
    <Compile Include="Xml\XNodeExtensions.cs" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Collections\Enumerable\EnumerableExtensions.MinMaxBy.cs" />
    <None Include="Compile.cmd">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Compile.tt</DependentUpon>
    </None>
    <Compile Include="Reflection\ReflectionExtensions.CreateInstance.cs" />
    <None Include="packages.config" />
    <None Include="Ranges\RangesPlannedChanges.md" />
    <None Include="Ranges\[Boundaries]\RangeBoundaryToReplacer.ttinclude" />
    <None Include="Ranges\[Ranges]\RangeWithTKeyReplacer.ttinclude" />
    <None Include="Strings\CharMethods.ttinclude" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="Algorithms\Algorithms.EqualRange.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>Algorithms.EqualRange.generated.cs</LastGenOutput>
    </Content>
    <Content Include="Algorithms\Algorithms.Memoize.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>Algorithms.Memoize.generated.cs</LastGenOutput>
    </Content>
    <Content Include="Algorithms\Algorithms.UpperBound.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>Algorithms.UpperBound.generated.cs</LastGenOutput>
    </Content>
    <Content Include="Algorithms\Algorithms.LowerBound.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>Algorithms.LowerBound.generated.cs</LastGenOutput>
    </Content>
    <Content Include="Arithmetic\Operators.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>Operators.generated.cs</LastGenOutput>
    </Content>
    <Content Include="Assertions\DebugEnumCode.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>DebugEnumCode.generated.cs</LastGenOutput>
    </Content>
    <Content Include="Collections\Dictionary\DictionaryExtensions.GetValueOrDefault.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>DictionaryExtensions.GetValueOrDefault.generated.cs</LastGenOutput>
    </Content>
    <Content Include="Dates\DateTimeRangeExtensions.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>DateTimeRangeExtensions.generated.cs</LastGenOutput>
    </Content>
    <Content Include="Dates\DateTimeExtensions.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>DateTimeExtensions.generated.cs</LastGenOutput>
    </Content>
    <Content Include="Fn.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>Fn.generated.cs</LastGenOutput>
    </Content>
    <Content Include="Expressions\Expr.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>Expr.generated.cs</LastGenOutput>
    </Content>
    <Content Include="Ranges\CompositeRange.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>CompositeRange.generated.cs</LastGenOutput>
    </Content>
    <Content Include="Ranges\Range.FactoryMethods.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>Range.FactoryMethods.generated.cs</LastGenOutput>
    </Content>
    <Content Include="Ranges\[Boundaries]\RangeBoundary.Operators.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>RangeBoundary.Operators.generated.cs</LastGenOutput>
    </Content>
    <Content Include="Ranges\[Boundaries]\RangeBoundaryTo`1.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>RangeBoundaryTo`1.generated.cs</LastGenOutput>
    </Content>
    <Content Include="Ranges\[Helper types]\RangeIntersection`2.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>RangeIntersection`2.generated.cs</LastGenOutput>
    </Content>
    <Content Include="Ranges\[RangeExtensions]\CompositeRangeExtensions.WithKey.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>CompositeRangeExtensions.WithKey.generated.cs</LastGenOutput>
    </Content>
    <Content Include="Ranges\[RangeExtensions]\RangeExtensions.WithKey.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>RangeExtensions.WithKey.generated.cs</LastGenOutput>
    </Content>
    <Content Include="Ranges\[Ranges]\CompositeRange`2.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>CompositeRange`2.generated.cs</LastGenOutput>
    </Content>
    <Content Include="Ranges\[Ranges]\Range`2.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>Range`2.generated.cs</LastGenOutput>
    </Content>
    <Content Include="Strings\CharExtensions.Infix.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>CharExtensions.Infix.generated.cs</LastGenOutput>
    </Content>
    <Content Include="Strings\StringExtensions.CharInfix.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>StringExtensions.CharInfix.generated.cs</LastGenOutput>
    </Content>
    <Content Include="Strings\StringExtensions.ToXxx.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>StringExtensions.ToXxx.generated.cs</LastGenOutput>
    </Content>
    <Content Include="Structures\OneOf\IOneOf.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>IOneOf.generated.cs</LastGenOutput>
    </Content>
    <Content Include="Structures\OneOf\OneOf.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>OneOf.generated.cs</LastGenOutput>
    </Content>
    <Content Include="Structures\OneOf\ValueOneOf.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ValueOneOf.generated.cs</LastGenOutput>
    </Content>
    <Content Include="Threading\InterlockedOperations.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>InterlockedOperations.generated.cs</LastGenOutput>
    </Content>
    <None Include="Arithmetic\Operators.ttinclude" />
    <Content Include="Assertions\DebugCode.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>DebugCode.generated.cs</LastGenOutput>
    </Content>
    <Content Include="Collections\Array\ArrayExtensions.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>ArrayExtensions.generated.cs</LastGenOutput>
    </Content>
    <Content Include="Collections\Enumerable\EnumerableExtensions.MinMaxBy.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>EnumerableExtensions.MinMaxBy.generated.cs</LastGenOutput>
    </Content>
    <Content Include="Compile.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>Compile.cmd</LastGenOutput>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <Service Include="{508349B6-6B84-4DF5-91F0-309BEEBAD82D}" />
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>