//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CodeJam
{
	public struct ValueOneOf<T1, T2>
	{
		private Cases _curCase;
		private object _value;

		private ValueOneOf(object value, Cases @case)
		{
			_value = value;
			_curCase = @case;
		}

		private enum Cases
		{
			Case1,
			Case2,
		}

		private bool IsCase1 => _curCase == Cases.Case1;
		private bool IsCase2 => _curCase == Cases.Case2;
	}

	public struct ValueOneOf<T1, T2, T3>
	{
		private Cases _curCase;
		private object _value;

		private ValueOneOf(object value, Cases @case)
		{
			_value = value;
			_curCase = @case;
		}

		private enum Cases
		{
			Case1,
			Case2,
			Case3,
		}

		private bool IsCase1 => _curCase == Cases.Case1;
		private bool IsCase2 => _curCase == Cases.Case2;
		private bool IsCase3 => _curCase == Cases.Case3;
	}

	public struct ValueOneOf<T1, T2, T3, T4>
	{
		private Cases _curCase;
		private object _value;

		private ValueOneOf(object value, Cases @case)
		{
			_value = value;
			_curCase = @case;
		}

		private enum Cases
		{
			Case1,
			Case2,
			Case3,
			Case4,
		}

		private bool IsCase1 => _curCase == Cases.Case1;
		private bool IsCase2 => _curCase == Cases.Case2;
		private bool IsCase3 => _curCase == Cases.Case3;
		private bool IsCase4 => _curCase == Cases.Case4;
	}

	public struct ValueOneOf<T1, T2, T3, T4, T5>
	{
		private Cases _curCase;
		private object _value;

		private ValueOneOf(object value, Cases @case)
		{
			_value = value;
			_curCase = @case;
		}

		private enum Cases
		{
			Case1,
			Case2,
			Case3,
			Case4,
			Case5,
		}

		private bool IsCase1 => _curCase == Cases.Case1;
		private bool IsCase2 => _curCase == Cases.Case2;
		private bool IsCase3 => _curCase == Cases.Case3;
		private bool IsCase4 => _curCase == Cases.Case4;
		private bool IsCase5 => _curCase == Cases.Case5;
	}

	public struct ValueOneOf<T1, T2, T3, T4, T5, T6>
	{
		private Cases _curCase;
		private object _value;

		private ValueOneOf(object value, Cases @case)
		{
			_value = value;
			_curCase = @case;
		}

		private enum Cases
		{
			Case1,
			Case2,
			Case3,
			Case4,
			Case5,
			Case6,
		}

		private bool IsCase1 => _curCase == Cases.Case1;
		private bool IsCase2 => _curCase == Cases.Case2;
		private bool IsCase3 => _curCase == Cases.Case3;
		private bool IsCase4 => _curCase == Cases.Case4;
		private bool IsCase5 => _curCase == Cases.Case5;
		private bool IsCase6 => _curCase == Cases.Case6;
	}

	public struct ValueOneOf<T1, T2, T3, T4, T5, T6, T7>
	{
		private Cases _curCase;
		private object _value;

		private ValueOneOf(object value, Cases @case)
		{
			_value = value;
			_curCase = @case;
		}

		private enum Cases
		{
			Case1,
			Case2,
			Case3,
			Case4,
			Case5,
			Case6,
			Case7,
		}

		private bool IsCase1 => _curCase == Cases.Case1;
		private bool IsCase2 => _curCase == Cases.Case2;
		private bool IsCase3 => _curCase == Cases.Case3;
		private bool IsCase4 => _curCase == Cases.Case4;
		private bool IsCase5 => _curCase == Cases.Case5;
		private bool IsCase6 => _curCase == Cases.Case6;
		private bool IsCase7 => _curCase == Cases.Case7;
	}

	public struct ValueOneOf<T1, T2, T3, T4, T5, T6, T7, T8>
	{
		private Cases _curCase;
		private object _value;

		private ValueOneOf(object value, Cases @case)
		{
			_value = value;
			_curCase = @case;
		}

		private enum Cases
		{
			Case1,
			Case2,
			Case3,
			Case4,
			Case5,
			Case6,
			Case7,
			Case8,
		}

		private bool IsCase1 => _curCase == Cases.Case1;
		private bool IsCase2 => _curCase == Cases.Case2;
		private bool IsCase3 => _curCase == Cases.Case3;
		private bool IsCase4 => _curCase == Cases.Case4;
		private bool IsCase5 => _curCase == Cases.Case5;
		private bool IsCase6 => _curCase == Cases.Case6;
		private bool IsCase7 => _curCase == Cases.Case7;
		private bool IsCase8 => _curCase == Cases.Case8;
	}

}